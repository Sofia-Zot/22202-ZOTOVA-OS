#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/wait.h>

int global_value = 42; 

int main() {
    int local_value = 15; 

    printf("Локальная переменная: адрес %p, значение %d\n", &local_value, local_value);
    printf("Глобальная переменная: адрес %p, значение %d\n", &global_value, global_value);
    printf("PID: %d\n", getpid()); 

    int child_pid = fork();

    if (child_pid == -1) {
        perror("Ошибка при создании процесса");
        return 1;
    } else if (child_pid == 0) { 
        printf("Я дочерний процесс, мой PID: %d, PID родителя: %d\n", getpid(), getppid());
        printf("дп: локальная переменная: адрес %p, значение %d\n", &local_value, local_value);
        printf("дп : глобальная переменная: адрес %p, значение %d\n", &global_value, global_value);

        local_value = 100; 
        global_value = 77;

        printf("дп: измененная локальная переменная: адрес %p, значение %d\n", &local_value, local_value);
        printf("дп: измененная глобальная переменная: адрес %p, значение %d\n", &global_value, global_value);

        exit(5); 
    } else { 
        printf("Я родительский процесс, мой PID: %d\n", getpid());
        printf("рп: локальная переменная: адрес %p, значение %d\n", &local_value, local_value);
        printf("рп: глобальная переменная: адрес %p, значение %d\n", &global_value, global_value);

        sleep(30); 

        int status; 
        waitpid(child_pid, &status, 0); 

        if (WIFEXITED(status)) { 
            int exit_code = WEXITSTATUS(status); 
            printf("Дочерний процесс завершился с кодом: %d\n", exit_code);
        } else if (WIFSIGNALED(status)) {
            int signal_num = WTERMSIG(status);
            printf("Дочерний процесс завершился по сигналу: %d\n", signal_num);
        }
    }

    return 0;
}